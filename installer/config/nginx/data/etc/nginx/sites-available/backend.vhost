upstream @backends {
    server 127.0.0.1:8000 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8001 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8002 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8003 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8004 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8005 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8006 max_fails=250 fail_timeout=60s;
    server 127.0.0.1:8007 max_fails=250 fail_timeout=60s;
    keepalive 64;
}

server {
    listen 127.0.0.1:80;
    server_name backend.local;

    add_header X-RateLimit-Limit 100;
    add_header X-RateLimit-Remaining 50;
    add_header X-RateLimit-Reset 1372700873;
    add_header Content-Type "application/json; charset=utf-8";

    rewrite ^(.*) http://$server_name$request_uri? permanent;
    limit_conn conn_limit_per_ip 10;
    limit_req zone=req_limit_per_ip burst=5 nodelay;
    
    if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
        return 405;
    }

    include /data/etc/nginx/errors.conf;
    include /data/etc/nginx/common.conf;

    location / {
        proxy_redirect off;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Frame-Options "DENY";
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_connect_timeout 10;
        proxy_read_timeout 10;
        proxy_pass http://@backends;
        allow 127.0.0.1;
        deny all;
    }
    
    try_files $uri /maintenance.html @backends;
    access_log /dev/null;
    # error_log /dev/null crit;
}

server {
    listen 443 ssl;
    server_name backend.domain.tld;

    add_header X-RateLimit-Limit 100;
    add_header X-RateLimit-Remaining 50;
    add_header X-RateLimit-Reset 1372700873;
    add_header Content-Type "application/json; charset=utf-8";

    ssl on;
    ssl_certificate /data/ssl/server.crt;
    ssl_certificate_key /data/ssl/server.key;

    rewrite ^(.*) https://$server_name$request_uri? permanent;
    limit_conn conn_limit_per_ip 10;
    limit_req zone=req_limit_per_ip burst=5 nodelay;
    
    if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
        return 405;
    }

    include /data/etc/nginx/errors.conf;
    include /data/etc/nginx/common.conf;

    location / {
        proxy_redirect off;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Frame-Options "DENY";
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_connect_timeout 10;
        proxy_read_timeout 10;
        proxy_pass http://@backends;
    }
    
    try_files $uri /maintenance.html @backends;
    access_log /dev/null;
    # error_log /dev/null crit;
}
